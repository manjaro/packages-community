diff -Npur NVIDIA-Linux-x86_64-340.101-no-compat32.orig/kernel/nv-linux.h NVIDIA-Linux-x86_64-340.101-no-compat32/kernel/nv-linux.h
--- NVIDIA-Linux-x86_64-340.101-no-compat32.orig/kernel/nv-linux.h	2016-12-01 23:48:28.000000000 +0100
+++ NVIDIA-Linux-x86_64-340.101-no-compat32/kernel/nv-linux.h	2017-01-10 09:34:18.779717637 +0100
@@ -270,7 +270,8 @@ RM_STATUS nvos_forward_error_to_cray(str
 
 extern int nv_pat_mode;
 
-#if !defined(NV_VMWARE) && defined(CONFIG_HOTPLUG_CPU)
+//#if !defined(NV_VMWARE) && defined(CONFIG_HOTPLUG_CPU)
+#if 0
 #define NV_ENABLE_HOTPLUG_CPU
 #include <linux/cpu.h>              /* CPU hotplug support              */
 #include <linux/notifier.h>         /* struct notifier_block, etc       */
diff -Npur NVIDIA-Linux-x86_64-340.101-no-compat32.orig/kernel/nv-p2p.c NVIDIA-Linux-x86_64-340.101-no-compat32/kernel/nv-p2p.c
--- NVIDIA-Linux-x86_64-340.101-no-compat32.orig/kernel/nv-p2p.c	2016-12-01 23:48:28.000000000 +0100
+++ NVIDIA-Linux-x86_64-340.101-no-compat32/kernel/nv-p2p.c	2017-01-10 09:32:17.959342729 +0100
@@ -112,7 +112,7 @@ EXPORT_SYMBOL(nvidia_p2p_destroy_mapping
 int nvidia_p2p_get_pages(
     uint64_t p2p_token,
     uint32_t va_space,
-    uint64_t virtual_address,
+    uint64_t address,
     uint64_t length,
     struct nvidia_p2p_page_table **page_table,
     void (*free_callback)(void * data),
@@ -136,7 +136,7 @@ int nvidia_p2p_get_pages(
         return -ENOMEM;
 
     status = rm_p2p_get_pages(sp, p2p_token, va_space,
-            virtual_address, length, &physical_addresses, &wreqmb_h,
+            address, length, &physical_addresses, &wreqmb_h,
             &rreqmb_h, &entries, *page_table,
             free_callback, data);
     if (status != RM_OK)
@@ -195,7 +195,7 @@ failed:
                 nvidia_p2p_page_t_cache);
     }
 
-    rm_p2p_put_pages(sp, p2p_token, va_space, virtual_address,
+    rm_p2p_put_pages(sp, p2p_token, va_space, address,
             *page_table);
 
     os_free_mem((*page_table)->pages);
@@ -232,7 +232,7 @@ EXPORT_SYMBOL(nvidia_p2p_free_page_table
 int nvidia_p2p_put_pages(
     uint64_t p2p_token,
     uint32_t va_space,
-    uint64_t virtual_address,
+    uint64_t address,
     struct nvidia_p2p_page_table *page_table
 )
 {
@@ -243,7 +243,7 @@ int nvidia_p2p_put_pages(
     if (sp == NULL)
         return -ENOMEM;
 
-    status = rm_p2p_put_pages(sp, p2p_token, va_space, virtual_address,
+    status = rm_p2p_put_pages(sp, p2p_token, va_space, address,
             page_table);
     if (status == RM_OK)
         nvidia_p2p_free_page_table(page_table);
diff -Npur NVIDIA-Linux-x86_64-340.101-no-compat32.orig/kernel/nv-p2p.h NVIDIA-Linux-x86_64-340.101-no-compat32/kernel/nv-p2p.h
--- NVIDIA-Linux-x86_64-340.101-no-compat32.orig/kernel/nv-p2p.h	2016-12-01 23:48:28.000000000 +0100
+++ NVIDIA-Linux-x86_64-340.101-no-compat32/kernel/nv-p2p.h	2017-01-10 09:32:17.959342729 +0100
@@ -123,7 +123,7 @@ struct nvidia_p2p_page_table {
  *   A token that uniquely identifies the P2P mapping.
  * @param[in]     va_space
  *   A GPU virtual address space qualifier.
- * @param[in]     virtual_address
+ * @param[in]     address
  *   The start address in the specified virtual address space.
  * @param[in]     length
  *   The length of the requested P2P mapping.
@@ -146,7 +146,7 @@ struct nvidia_p2p_page_table {
  *   -EIO         if an unknown error occurred.
  */
 int nvidia_p2p_get_pages(uint64_t p2p_token, uint32_t va_space,
-        uint64_t virtual_address,
+        uint64_t address,
         uint64_t length,
         struct nvidia_p2p_page_table **page_table,
         void (*free_callback)(void *data),
@@ -161,7 +161,7 @@ int nvidia_p2p_get_pages(uint64_t p2p_to
  *   A token that uniquely identifies the P2P mapping.
  * @param[in]     va_space
  *   A GPU virtual address space qualifier.
- * @param[in]     virtual_address
+ * @param[in]     address
  *   The start address in the specified virtual address space.
  * @param[in]     page_table
  *   A pointer to the array of structures with P2P PTEs.
@@ -172,7 +172,7 @@ int nvidia_p2p_get_pages(uint64_t p2p_to
  *   -EIO         if an unknown error occurred.
  */
 int nvidia_p2p_put_pages(uint64_t p2p_token, uint32_t va_space,
-        uint64_t virtual_address,
+        uint64_t address,
         struct nvidia_p2p_page_table *page_table);
 
 /*
diff -Npur NVIDIA-Linux-x86_64-340.101-no-compat32.orig/kernel/nv-pat.c NVIDIA-Linux-x86_64-340.101-no-compat32/kernel/nv-pat.c
--- NVIDIA-Linux-x86_64-340.101-no-compat32.orig/kernel/nv-pat.c	2016-12-01 23:48:28.000000000 +0100
+++ NVIDIA-Linux-x86_64-340.101-no-compat32/kernel/nv-pat.c	2017-01-10 09:32:17.959342729 +0100
@@ -271,7 +271,7 @@ nv_kern_cpu_callback(struct notifier_bloc
         case CPU_DOWN_FAILED:
         case CPU_ONLINE:
             nvidia_cpu_online((NvUPtr)hcpu);
             break;
-        case CPU_DOWN_PREPARE:
+        case CPU_DOWN_PREPARE_FROZEN:
             nvidia_cpu_teardown((NvUPtr)hcpu);
             break;
     }
