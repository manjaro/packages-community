# Maintainer: Philip MÃ¼ller <philm at manjaro dot org>
# Contributor: Timothy Redaelli <timothy dot redaelli at gmail dot com>
# Contributor: Zygmunt Krynicki <me at zygoon dot pl>

pkgbase=snapd
pkgname=snapd-git
_commit=8541f6889870b3ff4490434c2816efec0dbbad81
pkgver=2.28dev+171013+g8541f68
pkgrel=1
arch=('i686' 'x86_64')
url="https://github.com/snapcore/snapd"
license=('GPL3')
makedepends=('git' 'go' 'go-tools' 'libseccomp' 'libcap' 'python-docutils' 'systemd' 'xfsprogs')
checkdepends=('python' 'squashfs-tools' 'indent' 'shellcheck')

options=('!strip' 'emptydirs')
install=snapd.install
source=("$pkgname-$pkgver-$pkgrel.tar.gz::https://github.com/snapcore/snapd/archive/$_commit.tar.gz"
        'snapd.sh'
        '0001-cmd-snap-seccomp-link-to-libseccomp-dynamically.patch'
        '0002-fix-core.patch::https://github.com/snapcore/snapd/commit/8c821c13bb62703c5119a1b0b1edbd53ce7f48aa.patch')
sha256sums=('c81ca9f509290b2a52ad355bd3b8705bf4a28964099c6951c094cd2e4dfcf3a8'
            'a86620433eccb32a35b5a71e1809e3dd1a0399b421d91b4043cb2c1cc02ec24e'
            'ee3c9584426e9ef237ceca94c2ddeb495bf04a5e2a303b05c36b189e0c6a16e9'
            '4391395969fd75df79ae12ed733f1377013b5017724b75c1a001e8792241a74c')

_gourl=github.com/snapcore/snapd

prepare() {
  cd $pkgbase-$_commit

  # Use $srcdir/go as our GOPATH
  export GOPATH="$srcdir/go"
  mkdir -p "$GOPATH"
  # Have snapd checkout appear in a place suitable for subsequent GOPATH This
  # way we don't have to go get it again and it is exactly what the tag/hash
  # above describes.
  mkdir -p "$(dirname "$GOPATH/src/${_gourl}")"
  ln --no-target-directory -fs "$srcdir/$pkgbase-$_commit" "$GOPATH/src/${_gourl}"
  mv tests/main/snap-confine/task.yaml tests/main/snap-confine/task-nvidia.yaml
  # Apply some patches that didn't make it into the release
  for p in $srcdir/*.patch; do
      patch -d "$srcdir/$pkgbase-$_commit" -p1 < $p
  done
}

build() {
  export GOPATH="$srcdir/go"
  cd "$GOPATH/src/${_gourl}"
  # Generate version
  ./mkversion.sh $pkgver-$pkgrel
  ./get-deps.sh

  # Generate the real systemd units out of the available templates
  make -C data/systemd all

  # Build/install snap and snapd
  go install "${_gourl}/cmd/snap"
  go install "${_gourl}/cmd/snapctl"
  go install "${_gourl}/cmd/snapd"
  go install "${_gourl}/cmd/snap-update-ns"
  go install "${_gourl}/cmd/snap-seccomp"

  # Build snap-confine
  cd cmd
  autoreconf -i -f
  ./configure \
    --prefix=/usr \
    --libexecdir=/usr/lib/snapd \
    --with-snap-mount-dir=/var/lib/snapd/snap \
    --disable-apparmor \
    --enable-nvidia-arch \
    --enable-merged-usr
  make
}

#check() {
#  export GOPATH="$srcdir/go"
#  cd "$GOPATH/src/${_gourl}"
#  go test ./...
#  make -C cmd -k check
#}

package() {
  pkgdesc="Service and tools for management of snap packages."
  depends=('snap-confine' 'squashfs-tools' 'libseccomp' 'libsystemd')
  replaces=('snap-confine')
  provides=("snapd=$pkgver" 'snap-confine')
  conflicts=('snapd')

  export GOPATH="$srcdir/go"
  # Ensure that we have /var/lib/snapd/{hostfs,lib/gl}/ as they are required by snap-confine
  # for constructing some bind mounts around.
  install -d -m 755 "$pkgdir/var/lib/snapd/hostfs/" "$pkgdir/var/lib/snapd/lib/gl/"
  # Install the refresh timer and service for updating snaps
  install -d -m 755 "$pkgdir/usr/lib/systemd/system/"
  install -m 644 "$GOPATH/src/${_gourl}/data/systemd/snapd.refresh.service" "$pkgdir/usr/lib/systemd/system"
  install -m 644 "$GOPATH/src/${_gourl}/data/systemd/snapd.refresh.timer" "$pkgdir/usr/lib/systemd/system"
  # Install the snapd socket and service for the main daemon
  install -m 644 "$GOPATH/src/${_gourl}/data/systemd/snapd.service" "$pkgdir/usr/lib/systemd/system"
  install -m 644 "$GOPATH/src/${_gourl}/data/systemd/snapd.socket" "$pkgdir/usr/lib/systemd/system"
  # Install snap, snapctl, snap-update-ns, snap-seccomp and snapd executables
  install -d -m 755 "$pkgdir/usr/bin/"
  install -m 755 "$GOPATH/bin/snap" "$pkgdir/usr/bin/"
  install -m 755 "$GOPATH/bin/snapctl" "$pkgdir/usr/bin/"
  install -d -m 755 "$pkgdir/usr/lib/snapd"
  install -m 755 "$GOPATH/bin/snap-update-ns" "$pkgdir/usr/lib/snapd/"
  install -m 755 "$GOPATH/bin/snap-seccomp" "$pkgdir/usr/lib/snapd/"
  install -m 755 "$GOPATH/bin/snapd" "$pkgdir/usr/lib/snapd/"
  # Install snap-confine
  make -C "$srcdir/$pkgbase-$_commit/cmd" install DESTDIR="$pkgdir/"
  # Install script to export binaries paths of snaps
  install -Dm 755 "$srcdir/snapd.sh" "$pkgdir/etc/profile.d/apps-bin-path.sh"
  # Install the bash tab completion files
  install -Dm 755 "$GOPATH/src/${_gourl}/data/completion/snap" "$pkgdir/usr/share/bash-completion/completions/snap"
  install -Dm 755 "$GOPATH/src/${_gourl}/data/completion/complete.sh" "$pkgdir/usr/lib/snapd/complete.sh"
  install -Dm 755 "$GOPATH/src/${_gourl}/data/completion/etelpmoc.sh" "$pkgdir/usr/lib/snapd/etelpmoc.sh"
}
